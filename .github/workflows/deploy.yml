name: Deploy

on:
  push:
    branches: [ "main" ]

# Grant permissions for the GITHUB_TOKEN to write to the container registry
permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Log in to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }} # Automatically generated token

      # 3. Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest # Tags the image with your repo name

      # 4. Deploy to Hetzner server via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USER }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            # Log in to GHCR on the server
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull the latest image from GHCR
            docker pull ghcr.io/${{ github.repository }}:latest

            # Stop and remove the old container if it exists
            docker stop your-next-app-container || true
            docker rm your-next-app-container || true

            # Run the new container from the new image
            docker run -d --restart always \
              -p 3000:3000 \
              --name your-next-app-container \
              ghcr.io/${{ github.repository }}:latest
